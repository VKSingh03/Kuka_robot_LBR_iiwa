<launch>
  <include
    file="$(find gazebo_ros)/launch/empty_world.launch" >
    </include>
  <param
    name="robot_description"
    textfile="$(find kuka_robot)/urdf/kuka_robot.urdf" />
  <param name = "my_robot" value="kuka_robot"/> 
	<arg name ="init_pose" value="-x 0 -y 0 -z 0 -R 0 -P 0 -Y 0"/>

  <node
    name="tf_footprint_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0 0 0 0 0 0 base_link base_footprint 40" />

  <!-- This command adds the controller variables you defined in the config file into ros's parameter list. Simply add the file name in the file tag -->
	<rosparam file="$(find kuka_robot)/config/joint_names_kuka_robot.yaml" command="load"/>


	<!-- Node for publishing base footprint -->
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <param name="use_gui" value="False"/>
    </node>


    <!-- TF node that gives the static transformation between the world map and the base link of your robot. Change /base_link to the /root link name of your robot -->
    <node pkg="tf" type="static_transform_publisher" name="map_to_base" args="1 0 0 0 0 0 1 /map /dummy_link 10" />


    <!-- Controller spawner: Starts all the defined controllers with their configs. Just add your controller names defined in your config file into the args tag below --> 
    <node name="controller_spwaner" pkg="controller_manager" type="spawner" respawn="false"
    	output="screen" ns="/kuka_robot" args="joint_state_controller joint_1_controller joint_2_controller joint_3_controller joint_4_controller joint_5_controller joint_6_controller joint_end_effector_controller joint_arm_1_controller joint_arm_2_controller joint_arm_3_controller" /> 


    <!-- A node to publish the robot states onto ros network -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>	
    <node
    name="spawn_model"
    pkg="gazebo_ros"
    type="spawn_model"
    args="$(arg init_pose) -param robot_description -urdf -model my_robot"
    output="screen" />
    <node
      name="fake_joint_calibration"
      pkg="rostopic"
      type="rostopic"
      args="pub /calibrated std_msgs/Bool true" />

</launch>